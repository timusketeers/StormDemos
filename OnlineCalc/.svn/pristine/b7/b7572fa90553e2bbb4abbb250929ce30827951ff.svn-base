package com.howbuy.onlinecalc.aggregator;

import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import storm.trident.operation.Aggregator;
import storm.trident.operation.TridentCollector;
import storm.trident.operation.TridentOperationContext;
import storm.trident.tuple.TridentTuple;
import backtype.storm.tuple.Values;

import com.alibaba.fastjson.JSONArray;

@SuppressWarnings("serial")
public class ProfitLostAggregator implements Aggregator
{
    private Set<String> records = null;
    
    @SuppressWarnings("rawtypes")
    public void prepare(Map conf, TridentOperationContext context)
    {
        this.records = new HashSet<String>();
    }

    public void cleanup()
    {
        this.records = null;
    }

    public String init(Object batchId, TridentCollector collector)
    {
        return null;
    }

    public void aggregate(Object val, TridentTuple tuple, TridentCollector collector)
    {
        String record = tuple.getString(0);
        records.add(record);
    }

    public void complete(Object val, TridentCollector collector)
    {
        if (null == records)
        {
            return;
        }
        
        JSONArray jsonArray = new JSONArray();
        jsonArray.addAll(records);
        
        String joinRslt = jsonArray.toJSONString();
        System.out.println("Joined result:" + joinRslt);
        collector.emit(new Values(joinRslt));
    }
}
