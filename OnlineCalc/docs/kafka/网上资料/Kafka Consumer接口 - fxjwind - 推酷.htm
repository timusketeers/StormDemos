<!DOCTYPE html>
<!-- saved from url=(0038)http://www.tuicool.com/articles/fI7J3m -->
<html><style type="text/css" id="__se_success_css_wb_ccc__"></style><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta content="authenticity_token" name="csrf-param">
<meta content="S5bloE2oaBG2EEfcDif17WOEncMaNt9sWiRFrvhmWHU=" name="csrf-token">
    <title>
            Kafka Consumer接口 - fxjwind - 推酷
   </title>
    <meta name="description" content="Kafka Consumer接口 - fxjwind">
    <meta property="qc:admins" content="2040660764645137746375">
  <link rel="shortcut icon" href="http://static0.tuicool.com/favicon.ico" type="image/x-icon">
  <link href="./Kafka Consumer接口 - fxjwind - 推酷_files/application-ce83236e4ae0dfdd4cee786fa6efce8d.css" media="screen" rel="stylesheet" type="text/css">
  <link href="http://netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css" rel="stylesheet">
  <script async="" type="text/javascript" src="./Kafka Consumer接口 - fxjwind - 推酷_files/ca-pub-7054762349007490.js"></script><script src="./Kafka Consumer接口 - fxjwind - 推酷_files/application-647b6206ed7d53a9eba1826cffbfa9e7.js" type="text/javascript"></script>

  <!--[if IE 7]>
  <link rel="stylesheet" href="/assets/font-awesome-ie7.min.css">
  <![endif]--> 
    <script type="text/javascript" src="./Kafka Consumer接口 - fxjwind - 推酷_files/tip.js"></script> 
    <!-- <script src="http://www.tuicool.com/assets/tip-f4ec5857c9dd01477c5a6ab78e6538f2.js" type="text/javascript"></script> -->
  
  <script type="text/javascript" src="./Kafka Consumer接口 - fxjwind - 推酷_files/m.js"></script>
<script type="text/javascript" src="./Kafka Consumer接口 - fxjwind - 推酷_files/spin.min.js"></script><style type="text/css"></style>
<link rel="stylesheet" href="http://static0.tuicool.com/assets/github.css">

<script src="./Kafka Consumer接口 - fxjwind - 推酷_files/share.js"></script><link rel="stylesheet" href="http://bdimg.share.baidu.com/static/api/css/share_style1_24.css"></head>
<body><div id="BAIDU_DUP_fp_wrapper" style="position: absolute; left: -1px; bottom: -1px; z-index: 0; width: 0px; height: 0px; overflow: hidden; visibility: hidden; display: none; "><iframe id="BAIDU_DUP_fp_iframe" src="./Kafka Consumer接口 - fxjwind - 推酷_files/o(1).htm" style="width: 0px; height: 0px; visibility: hidden; display: none; "></iframe></div><div id="BAIDU_DUP_fp_wrapper" style="position: absolute; left: -1px; bottom: -1px; z-index: 0; width: 0px; height: 0px; overflow: hidden; visibility: hidden; display: none; "><iframe id="BAIDU_DUP_fp_iframe" src="./Kafka Consumer接口 - fxjwind - 推酷_files/o.htm" style="width: 0px; height: 0px; visibility: hidden; display: none; "></iframe></div>
  
  <div id="header" class="navbar-fixed-top">
    <div class="container">
      <div class="navbar">
        <div class="navbar-inner">
          <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse"> 
            <span class="icon-bar"></span> 
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span> 
          </a>
          <a href="http://www.tuicool.com/" class="brand">推酷</a>        
        <nav class="nav-collapse collapse">
            <ul class="nav navbar primary-nav">                            
              <li class="">
                <a href="http://www.tuicool.com/ah">
                  文章
                </a>
              </li>              
              <li class="">
                <a href="http://www.tuicool.com/topics">
                  主题
                </a>
              </li>
              <li class="">
                <a href="http://www.tuicool.com/sites/hot">
                  站点
                </a>
              </li>
              <li class="">
                <a href="http://huodong.tuicool.com/">
                  活动
                </a>
              </li>
              <li>
                <a href="http://www.tuicool.com/mobile">
                  <b class="core_color_night">客户端</b>
                </a>
              </li>

              <li class="dropdown">
                <a href="http://www.tuicool.com/articles/fI7J3m#" class="dropdown-toggle" data-toggle="dropdown">周刊 <b class="caret"></b></a>
                <ul class="dropdown-menu">
                  <li><a href="http://www.tuicool.com/mags">编程狂人</a></li>
                  <li><a href="http://www.tuicool.com/mags/design">设计匠艺</a></li>                  
                </ul>
              </li>
              
               <li class="dropdown">
                <a href="http://www.tuicool.com/articles/fI7J3m#" class="dropdown-toggle" data-toggle="dropdown">更多 <b class="caret"></b></a>
                <ul class="dropdown-menu">
                  <li><a href="http://www.tuicool.com/bbs">讨论区</a></li>  
                  <li><a href="http://www.tuicool.com/about">关于我们</a></li>                 
                </ul>
              </li>
              
              </ul>
            <form class="navbar-search pull-left" action="http://www.tuicool.com/topics/search">
              <input type="text" class="search-query span2" name="kw" placeholder="搜索主题">
            </form>
            <ul class="nav pull-right">
                <li><a href="http://www.tuicool.com/login">登录</a></li>
            </ul>
          </nav>
        </div>
      </div>
  </div>   
</div>
  <div id="flash_container" class="noPrint">    
    <!-- <a href='#'' class='close' data-dismiss='alert'>×</a> -->
  </div>
    
<div class="container-fluid">  
  <div class="row-fluid">
    <!--show start-->
    <div class="span8 contant">
        <h1>Kafka Consumer接口 - fxjwind</h1>
        <div class="article_meta">
            <span class="timestamp">时间&nbsp;2014-06-18 11:26:00
            </span>
            <span class="from">
                <i class="icon-globe"></i>
                    <a class="cut cut28 from" href="http://www.tuicool.com/sites/EfaUZrr" target="_blank">博客园_fxjwind
                    </a>
            </span>
            <span id="dup-cnt"><a href="http://www.tuicool.com/articles/dup?id=fI7J3m" target="_blank">相似文章</a> (<i id="dup">0</i>)</span>
            <span class="source" style="display:block;"><i style="float:left;">原文</i>&nbsp; 
                <a class="cut cut70" href="http://www.cnblogs.com/fxjwind/p/3794255.html" style="display:inline-block;">http://www.cnblogs.com/fxjwind/p/3794255.html</a>
            </span>
            <a href="http://www.tuicool.com/articles/fI7J3m#add-article-to-kan" id="add-article-to-kan-btn" class="btn" data-toggle="modal" style="display:none;">添加到推刊</a>
            <!-- add_article to kan -->
<div id="add-article-to-kan" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-header">
    <span class="add-title">收藏到推刊</span>
    <a href="http://www.tuicool.com/articles/fI7J3m#new-kan" class="btn pull-right" data-toggle="modal">创建推刊</a>
    <i class="clearfix"></i>
  </div>
  <div class="modal-body">
    <ul id="add-kan-list">
    </ul>
  </div>
  <div class="modal-footer">
    <input type="hidden" value="fI7J3m" class="article-id"> 
    <button class="btn btn-primary pull-left add-to-btn">  收 藏  </button>
    <button class="btn" data-dismiss="modal" aria-hidden="true">取消</button>
  </div>
</div>
<div class="add-article-to-kan-alert">
  已收藏到推刊！
</div>

            <div id="new-kan" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
<!--
    <a href="new-kan" class="btn" data-toggle="modal">创建推刊</a>
  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
    <h3 id="myModalLabel">Modal header</h3>
  </div>
-->
  <div class="modal-body">
    <input type="text" name="name" id="new-kan-name" placeholder="推刊名(必填)" required="" data-validation-required-message="请填写推刊名">
    <span class="new-ness-name">请填写推刊名</span>
    <br>
    <textarea name="desc" id="desc" rows="6" placeholder="推刊描述"></textarea>
    <span class="new-ness-desc">描述不能大于100个字符!</span>
    <br>
    权限设置：<input type="radio" name="type" value="1" checked="checked"> 公开
    <input type="radio" name="type" value="0"> 仅自己可见
  </div>
  <div class="modal-footer">
    <button class="btn btn-primary pull-left create-kan-btn" disabled="">创建</button>
    <button class="btn dismiss-new-kan" data-dismiss="modal" aria-hidden="true">取消</button>
  </div>
</div>


        </div>
        <div class="article_body" id="nei">
            <div>
  <div>
    <div>
      <p>对于kafka的consumer接口，提供两种版本，</p>
      <h3>high-level</h3>
      <div>
        <p>一种high-level版本，比较简单不用关心offset, 会自动的读zookeeper中该Consumer group的last offset</p>
        <p>
          参考，          <a title="https://cwiki.apache.org/confluence/display/KAFKA/Consumer+Group+Example" href="https://cwiki.apache.org/confluence/display/KAFKA/Consumer+Group+Example" rel="nofollow,noindex">https://cwiki.apache.org/confluence/display/KAFKA/Consumer+Group+Example</a>
        </p>
      </div>
      <div>
        <p>不过要注意一些注意事项，对于多个partition和多个consumer</p>
        <p>1. 如果consumer比partition多，是浪费，因为kafka的设计是在一个partition上是不允许并发的，所以consumer数不要大于partition数</p>
        <p>2. 如果consumer比partition少，一个consumer会对应于多个partitions，这里主要合理分配consumer数和partition数，否则会导致partition里面的数据被取的不均匀</p>
        <p>最好partiton数目是consumer数目的整数倍，所以partition数目很重要，比如取24，就很容易设定consumer数目</p>
        <p>3. 如果consumer从多个partition读到数据，不保证数据间的顺序性，kafka只保证在一个partition上数据是有序的，但多个partition，根据你读的顺序会有不同</p>
        <p>4. 增减consumer，broker，partition会导致rebalance，所以rebalance后consumer对应的partition会发生变化</p>
        <p>5. High-level接口中获取不到数据的时候是会block的</p>
      </div>

        <pre class="prettyprint java"><span style="color: #000000"><span class="keyword">import</span> kafka.consumer.ConsumerConfig;
<span class="keyword">import</span> kafka.consumer.KafkaStream;
<span class="keyword">import</span> kafka.javaapi.consumer.ConsumerConnector;
 
<span class="keyword">import</span> java.util.HashMap;
<span class="keyword">import</span> java.util.List;
<span class="keyword">import</span> java.util.Map;
<span class="keyword">import</span> java.util.Properties;
<span class="keyword">import</span> java.util.concurrent.ExecutorService;
<span class="keyword">import</span> java.util.concurrent.Executors;
 
</span><span style="color: #0000ff"><span class="keyword">public</span></span> <span style="color: #0000ff"><span class="class"><span class="keyword">class</span></span></span><span class="class"><span style="color: #000000"> <span class="title">ConsumerGroupExample</span> {</span></span><span style="color: #000000">
<span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">private</span></span><span style="color: #000000"> <span class="keyword">final</span> ConsumerConnector consumer;
<span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">private</span></span><span style="color: #000000"> <span class="keyword">final</span> String topic;
<span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">private</span></span><span style="color: #000000">  ExecutorService executor;
 
<span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">public</span></span><span style="color: #000000"> ConsumerGroupExample(String a_zookeeper, String a_groupId, String a_topic) {
<span class="indent">  </span><span class="indent">  </span>consumer </span>=<span style="color: #000000"> kafka.consumer.Consumer.createJavaConsumerConnector( <span style="color: #008000"><span class="comment">// 创建Connector，注意下面对conf的配置</span></span>
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>createConsumerConfig(a_zookeeper, a_groupId));
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">this</span></span>.topic =<span style="color: #000000"> a_topic;
<span class="indent">  </span>}
 
<span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">public</span></span> <span style="color: #0000ff"><span class="keyword">void</span></span><span style="color: #000000"> shutdown() {
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">if</span></span> (consumer != <span style="color: #0000ff"><span class="keyword">null</span></span><span style="color: #000000">) consumer.shutdown();
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">if</span></span> (executor != <span style="color: #0000ff"><span class="keyword">null</span></span><span style="color: #000000">) executor.shutdown();
<span class="indent">  </span>}
 
<span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">public</span></span> <span style="color: #0000ff"><span class="keyword">void</span></span> run(<span style="color: #0000ff"><span class="keyword">int</span></span><span style="color: #000000"> a_numThreads) { <span style="color: #008000"><span class="comment">// 创建并发的consumers</span></span>
<span class="indent">  </span><span class="indent">  </span>Map</span>&lt;String, Integer&gt; topicCountMap = <span style="color: #0000ff"><span class="keyword">new</span></span> HashMap&lt;String, Integer&gt;<span style="color: #000000">();
<span class="indent">  </span><span class="indent">  </span>topicCountMap.put(topic, </span><span style="color: #0000ff"><span class="keyword">new</span></span><span style="color: #000000"> Integer(a_numThreads)); <span style="color: #008000"><span class="comment">// 描述读取哪个topic，需要几个线程读</span></span>
<span class="indent">  </span><span class="indent">  </span>Map</span>&lt;String, List&lt;KafkaStream&lt;<span style="color: #0000ff"><span class="keyword">byte</span></span>[], <span style="color: #0000ff"><span class="keyword">byte</span></span>[]&gt;&gt;&gt; consumerMap =<span style="color: #000000"> consumer.createMessageStreams(topicCountMap); <span style="color: #008000"><span class="comment">// 创建Streams</span></span>
<span class="indent">  </span><span class="indent">  </span>List</span>&lt;KafkaStream&lt;<span style="color: #0000ff"><span class="keyword">byte</span></span>[], <span style="color: #0000ff"><span class="keyword">byte</span></span>[]&gt;&gt; streams = consumerMap.<span style="color: #0000ff">get</span><span style="color: #000000">(topic); <span style="color: #008000"><span class="comment">// 每个线程对应于一个KafkaStream</span></span>
 
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #008000"><span class="comment">//</span></span><span class="comment"><span style="color: #008000"> now launch all the threads</span></span><span style="color: #008000">
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #008000"><span class="comment">//</span>
</span><span class="indent">  </span><span class="indent">  </span>executor =<span style="color: #000000"> Executors.newFixedThreadPool(a_numThreads);
 
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #008000"><span class="comment">//</span></span><span class="comment"><span style="color: #008000"> now create an object to consume the messages</span></span><span style="color: #008000">
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #008000"><span class="comment">//</span>
</span><span class="indent">  </span><span class="indent">  </span><span style="color: #0000ff"><span class="keyword">int</span></span> threadNumber = <span style="color: #800080"><span class="number">0</span></span><span style="color: #000000">;
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">for</span></span><span style="color: #000000"> (<span class="keyword">final</span> KafkaStream stream : streams) {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>executor.submit(</span><span style="color: #0000ff"><span class="keyword">new</span></span><span style="color: #000000"> ConsumerTest(stream, threadNumber)); <span style="color: #008000"><span class="comment">// 启动consumer thread</span></span>
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>threadNumber</span>++<span style="color: #000000">;
<span class="indent">  </span><span class="indent">  </span>}
<span class="indent">  </span>}
 
<span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">private</span></span> <span style="color: #0000ff"><span class="keyword">static</span></span><span style="color: #000000"> ConsumerConfig createConsumerConfig(String a_zookeeper, String a_groupId) {
<span class="indent">  </span><span class="indent">  </span>Properties props </span>= <span style="color: #0000ff"><span class="keyword">new</span></span><span style="color: #000000"> Properties();
<span class="indent">  </span><span class="indent">  </span>props.put(</span><span style="color: #800000"><span class="string">"</span></span><span class="string"><span style="color: #800000">zookeeper.connect</span><span style="color: #800000">"</span></span><span style="color: #800000"></span><span style="color: #000000">, a_zookeeper);
<span class="indent">  </span><span class="indent">  </span>props.put(</span><span style="color: #800000"><span class="string">"</span></span><span class="string"><span style="color: #800000">group.id</span><span style="color: #800000">"</span></span><span style="color: #800000"></span><span style="color: #000000">, a_groupId);
<span class="indent">  </span><span class="indent">  </span>props.put(</span><span style="color: #800000"><span class="string">"</span></span><span class="string"><span style="color: #800000">zookeeper.session.timeout.ms</span><span style="color: #800000">"</span></span><span style="color: #800000"></span>, <span style="color: #800000"><span class="string">"</span></span><span class="string"><span style="color: #800000">400</span><span style="color: #800000">"</span></span><span style="color: #800000"></span><span style="color: #000000">);
<span class="indent">  </span><span class="indent">  </span>props.put(</span><span style="color: #800000"><span class="string">"</span></span><span class="string"><span style="color: #800000">zookeeper.sync.time.ms</span><span style="color: #800000">"</span></span><span style="color: #800000"></span>, <span style="color: #800000"><span class="string">"</span></span><span class="string"><span style="color: #800000">200</span><span style="color: #800000">"</span></span><span style="color: #800000"></span><span style="color: #000000">);
<span class="indent">  </span><span class="indent">  </span>props.put(</span><span style="color: #800000"><span class="string">"</span></span><span class="string"><span style="color: #800000">auto.commit.interval.ms</span><span style="color: #800000">"</span></span><span style="color: #800000"></span>, <span style="color: #800000"><span class="string">"</span></span><span class="string"><span style="color: #800000">1000</span><span style="color: #800000">"</span></span><span style="color: #800000"></span><span style="color: #000000">);
 
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">return</span></span> <span style="color: #0000ff"><span class="keyword">new</span></span><span style="color: #000000"> ConsumerConfig(props);
<span class="indent">  </span>}
 
<span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">public</span></span> <span style="color: #0000ff"><span class="keyword">static</span></span> <span style="color: #0000ff"><span class="keyword">void</span></span><span style="color: #000000"> main(String[] args) {
<span class="indent">  </span><span class="indent">  </span>String zooKeeper </span>= args[<span style="color: #800080"><span class="number">0</span></span><span style="color: #000000">];
<span class="indent">  </span><span class="indent">  </span>String groupId </span>= args[<span style="color: #800080"><span class="number">1</span></span><span style="color: #000000">];
<span class="indent">  </span><span class="indent">  </span>String topic </span>= args[<span style="color: #800080"><span class="number">2</span></span><span style="color: #000000">];
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">int</span></span> threads = Integer.parseInt(args[<span style="color: #800080"><span class="number">3</span></span><span style="color: #000000">]);
 
<span class="indent">  </span><span class="indent">  </span>ConsumerGroupExample example </span>= <span style="color: #0000ff"><span class="keyword">new</span></span><span style="color: #000000"> ConsumerGroupExample(zooKeeper, groupId, topic);
<span class="indent">  </span><span class="indent">  </span>example.run(threads);
 
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">try</span></span><span style="color: #000000"> {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>Thread.sleep(</span><span style="color: #800080"><span class="number">10000</span></span><span style="color: #000000">);
<span class="indent">  </span><span class="indent">  </span>} </span><span style="color: #0000ff"><span class="keyword">catch</span></span><span style="color: #000000"> (InterruptedException ie) {
 
<span class="indent">  </span><span class="indent">  </span>}
<span class="indent">  </span><span class="indent">  </span>example.shutdown();
<span class="indent">  </span>}
}</span></pre>
            <h3>SimpleConsumer</h3>
      <p>另一种是SimpleConsumer，名字起的，以为是简单的接口，其实是low-level consumer，更复杂的接口</p>
      <p>
        参考，        <a title="https://cwiki.apache.org/confluence/display/KAFKA/0.8.0+SimpleConsumer+Example" href="https://cwiki.apache.org/confluence/display/KAFKA/0.8.0+SimpleConsumer+Example" rel="nofollow,noindex">https://cwiki.apache.org/confluence/display/KAFKA/0.8.0+SimpleConsumer+Example</a>
      </p>
      <p>什么时候用这个接口?</p>
      <ol>
        <li>Read a message multiple times</li>
        <li>Consume only a subset of the partitions in a topic in a process</li>
        <li>Manage transactions to make sure a message is processed once and only once</li>
      </ol>
      <div>
        <p>当然用这个接口是有代价的，即partition,broker,offset对你不再透明，需要自己去管理这些，并且还要handle broker leader的切换，很麻烦</p>
        <p>所以不是一定要用，最好别用</p>
      </div>
      <ol>
        <li>You must keep track of the offsets in your application to know where you left off consuming.</li>
        <li>You must figure out which Broker is the lead Broker for a topic and partition</li>
        <li>You must handle Broker leader changes</li>
      </ol>
      <p>使用SimpleConsumer的步骤：</p>
      <ol>
        <li>Find an active Broker and find out which Broker is the leader for your topic and partition</li>
        <li>Determine who the replica Brokers are for your topic and partition</li>
        <li>Build the request defining what data you are interested in</li>
        <li>Fetch the data</li>
        <li>Identify and recover from leader changes</li>
      </ol>
      <div>
        <p>首先，你必须知道读哪个topic的哪个partition</p>
        <p>然后，找到负责该partition的broker leader，从而找到存有该partition副本的那个broker</p>
        <p>再者，自己去写request并fetch数据</p>
        <p>最终，还要注意需要识别和处理broker leader的改变</p>
      </div>
      <p>逐步来看，</p>
      <p>
        <u>Finding the Lead Broker for a Topic and Partition</u>
      </p>
      <div>
        <p>思路就是，遍历每个broker，取出该topic的metadata，然后再遍历其中的每个partition metadata，如果找到我们要找的partition就返回</p>
        <p>根据返回的PartitionMetadata.leader().host()找到leader broker</p>
      </div>

        <pre class="prettyprint cs"><span style="color: #0000ff"><span class="keyword">private</span></span> PartitionMetadata findLeader(List&lt;String&gt; a_seedBrokers, <span style="color: #0000ff"><span class="keyword">int</span></span> a_port, String a_topic, <span style="color: #0000ff"><span class="keyword">int</span></span><span style="color: #000000"> a_partition) {
<span class="indent">  </span><span class="indent">  </span>PartitionMetadata returnMetaData </span>= <span style="color: #0000ff"><span class="keyword">null</span></span><span style="color: #000000">;
<span class="indent">  </span><span class="indent">  </span>loop:
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">for</span></span><span style="color: #000000"> (String seed : a_seedBrokers) { <span style="color: #008000"><span class="comment">//遍历每个broker </span></span>
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>SimpleConsumer consumer </span>= <span style="color: #0000ff"><span class="keyword">null</span></span><span style="color: #000000">;
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">try</span></span><span style="color: #000000"> {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #008000"><span class="comment">//创建Simple Consumer，</span>
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="comment">//class SimpleConsumer(val host: String,val port: Int,val soTimeout: Int</span>
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="comment">//					 ,val bufferSize: Int,val clientId: String) </span>
</span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>consumer = <span style="color: #0000ff"><span class="keyword">new</span></span> SimpleConsumer(seed, a_port, <span class="number">100000</span>, <span class="number">64</span> * <span class="number">1024</span>, <span class="string">"leaderLookup"</span><span style="color: #000000">);
 
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>List</span>&lt;String&gt; topics =<span style="color: #000000"> Collections.singletonList(a_topic);
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>TopicMetadataRequest req </span>= <span style="color: #0000ff"><span class="keyword">new</span></span> TopicMetadataRequest(topics); <span style="color: #008000"><span class="comment">//</span>
</span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>kafka.javaapi.TopicMetadataResponse resp =<span style="color: #000000"> consumer.send(req); <span style="color: #008000"><span class="comment">//发送TopicMetadata Request请求</span></span>
 
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>List</span>&lt;TopicMetadata&gt; metaData =<span style="color: #000000"> resp.topicsMetadata(); <span style="color: #008000"><span class="comment">//取到Topic的Metadata </span></span>
 
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">for</span></span><span style="color: #000000"> (TopicMetadata item : metaData) {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">for</span></span><span style="color: #000000"> (PartitionMetadata part : item.partitionsMetadata()) {<span style="color: #008000"><span class="comment">//遍历每个partition的metadata</span></span>
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">if</span></span> (part.partitionId() == a_partition) { <span style="color: #008000"><span class="comment">//确认是否是我们要找的partition</span>
</span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>returnMetaData =<span style="color: #000000"> part;
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">break</span></span><span style="color: #000000"> loop; <span style="color: #008000"><span class="comment">//找到就返回</span></span>
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>}
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>}
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>}
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>} </span><span style="color: #0000ff"><span class="keyword">catch</span></span><span style="color: #000000"> (Exception e) {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>System.<span class="keyword">out</span>.println(</span><span class="string">"Error communicating with Broker ["</span> + seed + <span class="string">"] to find Leader for ["</span> +<span style="color: #000000"> a_topic
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span>+ <span class="string">", "</span> + a_partition + <span class="string">"] Reason: "</span> +<span style="color: #000000"> e);
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>} </span><span style="color: #0000ff"><span class="keyword">finally</span></span><span style="color: #000000"> {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">if</span></span> (consumer != <span style="color: #0000ff"><span class="keyword">null</span></span><span style="color: #000000">) consumer.close();
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>}
<span class="indent">  </span><span class="indent">  </span>}
</span><span style="color: #000000"><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">return</span></span><span style="color: #000000"> returnMetaData;
<span class="indent">  </span>}</span></pre>
            <p>
        <u>Finding Starting Offset for Reads</u>
      </p>
      <p>
        request主要的信息就是        <span>Map</span>
        &lt;TopicAndPartition, PartitionOffsetRequestInfo&gt;      </p>
      <div>
        <p>TopicAndPartition就是对topic和partition信息的封装</p>
        <p>PartitionOffsetRequestInfo的定义</p>
        <p>case class PartitionOffsetRequestInfo(time: Long, maxNumOffsets: Int)</p>
        <p>其中参数time，表示where to start reading data，两个取值</p>
        <p>kafka.api.OffsetRequest.EarliestTime()，the beginning of the data in the logs</p>
        <p>kafka.api.OffsetRequest.LatestTime()，will only stream new messages</p>
      </div>
      <p>不要认为起始的offset一定是0，因为messages会过期，被删除</p>
      <p>另外一个参数不清楚什么含义，代码中取的是1</p>

        <pre class="prettyprint cs"><span style="color: #0000ff"><span class="keyword">public</span></span> <span style="color: #0000ff"><span class="keyword">static</span></span> <span style="color: #0000ff"><span class="keyword">long</span></span> getLastOffset(SimpleConsumer consumer, String topic, <span style="color: #0000ff"><span class="keyword">int</span></span><span style="color: #000000"> partition,
<span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">long</span></span><span style="color: #000000"> whichTime, String clientName) {
        TopicAndPartition topicAndPartition </span>= <span style="color: #0000ff"><span class="keyword">new</span></span><span style="color: #000000"> TopicAndPartition(topic, partition);
        Map</span>&lt;TopicAndPartition, PartitionOffsetRequestInfo&gt; requestInfo = <span style="color: #0000ff"><span class="keyword">new</span></span> HashMap&lt;TopicAndPartition, PartitionOffsetRequestInfo&gt;<span style="color: #000000">();
        requestInfo.put(topicAndPartition, </span><span style="color: #0000ff"><span class="keyword">new</span></span> PartitionOffsetRequestInfo(whichTime, <span class="number">1</span><span style="color: #000000">)); <span style="color: #008000"><span class="comment">//build offset fetch request info</span></span>
        kafka.javaapi.OffsetRequest request </span>= <span style="color: #0000ff"><span class="keyword">new</span></span><span style="color: #000000"> kafka.javaapi.OffsetRequest(requestInfo, 
<span class="indent">  </span>             kafka.api.OffsetRequest.CurrentVersion(),clientName);
        OffsetResponse response </span>= consumer.getOffsetsBefore(request); <span style="color: #008000"><span class="comment">//取到offsets</span>
</span> 
        <span style="color: #0000ff"><span class="keyword">if</span></span><span style="color: #000000"> (response.hasError()) {
            System.<span class="keyword">out</span>.println(</span><span class="string">"Error fetching data Offset Data the Broker. Reason: "</span> +<span style="color: #000000"> response.errorCode(topic, partition) );
            </span><span style="color: #0000ff"><span class="keyword">return</span></span> <span class="number">0</span><span style="color: #000000">;
        }
        </span><span style="color: #0000ff"><span class="keyword">long</span></span>[] offsets = response.offsets(topic, partition); <span style="color: #008000"><span class="comment">//取到的一组offset</span>
</span>        <span style="color: #0000ff"><span class="keyword">return</span></span> offsets[<span class="number">0</span><span style="color: #000000">]; <span style="color: #008000"><span class="comment">//取第一个开始读</span></span>
    }</span></pre>
            <p>
        <u>Reading the Data</u>
      </p>
      <div>
        <p>首先在FetchRequest上加上Fetch，指明topic，partition，开始的offset，读取的大小</p>
        <p>如果producer在写入很大的message时，也许这里指定的1000000是不够的，会返回an empty message set，这时需要增加这个值，直到得到一个非空的message set。</p>
      </div>

        <pre class="prettyprint cs"><span style="color: #008000"><span class="comment">//</span></span><span class="comment"><span style="color: #008000"> When calling FetchRequestBuilder, it's important NOT to call .replicaId(), which is meant for internal use only.</span></span><span style="color: #008000">
</span><span style="color: #008000"><span class="comment">//</span></span><span class="comment"><span style="color: #008000"> Setting the replicaId incorrectly will cause the brokers to behave incorrectly.</span></span><span style="color: #008000"></span>
FetchRequest req = <span style="color: #0000ff"><span class="keyword">new</span></span><span style="color: #000000"> FetchRequestBuilder()
<span class="indent">  </span><span class="indent">  </span>.clientId(clientName)
<span class="indent">  </span><span class="indent">  </span>.addFetch(a_topic, a_partition, readOffset, </span><span class="number">100000</span><span style="color: #000000">) <span style="color: #008000"><span class="comment">//</span></span><span class="comment"><span style="color: #008000"> 1000000bytes</span></span><span style="color: #008000"></span>
<span class="indent">  </span><span class="indent">  </span>.build();
FetchResponse fetchResponse </span>=<span style="color: #000000"> consumer.fetch(req);
 
</span><span style="color: #0000ff"><span class="keyword">if</span></span><span style="color: #000000"> (fetchResponse.hasError()) {
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #008000"><span class="comment">//</span></span><span class="comment"><span style="color: #008000"> See Error Handling</span></span><span style="color: #008000"></span>
<span style="color: #000000">}
numErrors </span>= <span class="number">0</span><span style="color: #000000">;
 
</span><span style="color: #0000ff"><span class="keyword">long</span></span> numRead = <span class="number">0</span><span style="color: #000000">;
</span><span style="color: #0000ff"><span class="keyword">for</span></span><span style="color: #000000"> (MessageAndOffset messageAndOffset : fetchResponse.messageSet(a_topic, a_partition)) {
<span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">long</span></span> currentOffset =<span style="color: #000000"> messageAndOffset.offset();
<span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">if</span></span> (currentOffset &lt;<span style="color: #000000"> readOffset) { <span style="color: #008000"><span class="comment">//</span></span><span class="comment"><span style="color: #008000"> 必要判断，因为对于compressed message，会返回整个block，所以可能包含old的message</span></span><span style="color: #008000"></span>
<span class="indent">  </span><span class="indent">  </span>System.<span class="keyword">out</span>.println(</span><span class="string">"Found an old offset: "</span> + currentOffset + <span class="string">" Expecting: "</span> +<span style="color: #000000"> readOffset);
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">continue</span></span><span style="color: #000000">;
<span class="indent">  </span>}
<span class="indent">  </span>readOffset </span>=<span style="color: #000000"> messageAndOffset.nextOffset(); <span style="color: #008000"><span class="comment">// 获取下一个readOffset</span></span>
<span class="indent">  </span>ByteBuffer payload </span>=<span style="color: #000000"> messageAndOffset.message().payload();
 
<span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">byte</span></span>[] bytes = <span style="color: #0000ff"><span class="keyword">new</span></span> <span style="color: #0000ff"><span class="keyword">byte</span></span><span style="color: #000000">[payload.limit()];
<span class="indent">  </span>payload.<span class="keyword">get</span>(bytes);
<span class="indent">  </span>System.<span class="keyword">out</span>.println(String.valueOf(messageAndOffset.offset()) </span>+ <span class="string">": "</span> + <span style="color: #0000ff"><span class="keyword">new</span></span> String(bytes, <span class="string">"UTF-8"</span><span style="color: #000000">));
<span class="indent">  </span>numRead</span>++<span style="color: #000000">;
</span><span style="color: #000000">}
 
</span><span style="color: #0000ff"><span class="keyword">if</span></span> (numRead == <span class="number">0</span><span style="color: #000000">) {
<span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">try</span></span><span style="color: #000000"> {
<span class="indent">  </span><span class="indent">  </span>Thread.sleep(</span><span class="number">1000</span><span style="color: #000000">);
<span class="indent">  </span>} </span><span style="color: #0000ff"><span class="keyword">catch</span></span><span style="color: #000000"> (InterruptedException ie) {
<span class="indent">  </span>}
}</span></pre>
            <p>
        <u>Error Handling</u>
      </p>

        <pre class="prettyprint cs"><span style="color: #0000ff"><span class="keyword">if</span></span><span style="color: #000000"> (fetchResponse.hasError()) {
<span class="indent">  </span> numErrors</span>++<span style="color: #000000">;
<span class="indent">  </span> </span><span style="color: #008000"><span class="comment">//</span></span><span class="comment"><span style="color: #008000"> Something went wrong!</span></span><span style="color: #008000"></span>
<span class="indent">  </span> <span style="color: #0000ff"><span class="keyword">short</span></span> code =<span style="color: #000000"> fetchResponse.errorCode(a_topic, a_partition);
<span class="indent">  </span> System.<span class="keyword">out</span>.println(</span><span class="string">"Error fetching data from the Broker:"</span> + leadBroker + <span class="string">" Reason: "</span> +<span style="color: #000000"> code);
<span class="indent">  </span> </span><span style="color: #0000ff"><span class="keyword">if</span></span> (numErrors &gt; <span class="number">5</span>) <span style="color: #0000ff"><span class="keyword">break</span></span><span style="color: #000000">;
 
<span class="indent">  </span> </span><span style="color: #0000ff"><span class="keyword">if</span></span> (code ==<span style="color: #000000"> ErrorMapping.OffsetOutOfRangeCode())  { <span style="color: #008000"><span class="comment">//</span></span><span class="comment"><span style="color: #008000"> 处理offset非法的问题，用最新的offset</span></span><span style="color: #008000"></span>
<span class="indent">  </span><span class="indent">  </span> </span><span style="color: #008000"><span class="comment">//</span></span><span class="comment"><span style="color: #008000"> We asked for an invalid offset. For simple case ask for the last element to reset</span></span><span style="color: #008000"></span>
<span class="indent">  </span><span class="indent">  </span> readOffset =<span style="color: #000000"> getLastOffset(consumer,a_topic, a_partition, kafka.api.OffsetRequest.LatestTime(), clientName);
<span class="indent">  </span><span class="indent">  </span> </span><span style="color: #0000ff"><span class="keyword">continue</span></span><span style="color: #000000">;
<span class="indent">  </span> }
<span class="indent">  </span> consumer.close();
<span class="indent">  </span> consumer </span>= <span style="color: #0000ff"><span class="keyword">null</span></span><span style="color: #000000">;
<span class="indent">  </span> leadBroker </span>=<span style="color: #000000"> findNewLeader(leadBroker, a_topic, a_partition, a_port); <span style="color: #008000"><span class="comment">//</span></span><span class="comment"><span style="color: #008000"> 更新leader broker</span></span><span style="color: #008000"></span>
<span class="indent">  </span> </span><span style="color: #0000ff"><span class="keyword">continue</span></span><span style="color: #000000">;
 }</span></pre>
            <div>
        <p>没有特别的逻辑，只是重新调用findLeader获取leader broker</p>
        <p>并且防止在切换过程中，取不到leader信息，加上sleep逻辑</p>
      </div>

        <pre class="prettyprint java"><span style="color: #0000ff"><span class="keyword">private</span></span> String findNewLeader(String a_oldLeader, String a_topic, <span style="color: #0000ff"><span class="keyword">int</span></span> a_partition, <span style="color: #0000ff"><span class="keyword">int</span></span> a_port) <span style="color: #0000ff"><span class="keyword">throws</span></span><span style="color: #000000"> Exception {
<span class="indent">  </span>   </span><span style="color: #0000ff"><span class="keyword">for</span></span> (<span style="color: #0000ff"><span class="keyword">int</span></span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++<span style="color: #000000">) {
<span class="indent">  </span><span class="indent">  </span>   </span><span style="color: #0000ff"><span class="keyword">boolean</span></span> goToSleep = <span style="color: #0000ff"><span class="keyword">false</span></span><span style="color: #000000">;
<span class="indent">  </span><span class="indent">  </span>   PartitionMetadata metadata </span>=<span style="color: #000000"> findLeader(m_replicaBrokers, a_port, a_topic, a_partition);
<span class="indent">  </span><span class="indent">  </span>   </span><span style="color: #0000ff"><span class="keyword">if</span></span> (metadata == <span style="color: #0000ff"><span class="keyword">null</span></span><span style="color: #000000">) {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>   goToSleep </span>= <span style="color: #0000ff"><span class="keyword">true</span></span><span style="color: #000000">;
<span class="indent">  </span><span class="indent">  </span>   } </span><span style="color: #0000ff"><span class="keyword">else</span></span> <span style="color: #0000ff"><span class="keyword">if</span></span> (metadata.leader() == <span style="color: #0000ff"><span class="keyword">null</span></span><span style="color: #000000">) {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>   goToSleep </span>= <span style="color: #0000ff"><span class="keyword">true</span></span><span style="color: #000000">;
<span class="indent">  </span><span class="indent">  </span>   } </span><span style="color: #0000ff"><span class="keyword">else</span></span> <span style="color: #0000ff"><span class="keyword">if</span></span> (a_oldLeader.equalsIgnoreCase(metadata.leader().host()) &amp;&amp; i == <span class="number">0</span><span style="color: #000000">) {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>   </span><span style="color: #008000"><span class="comment">//</span></span><span class="comment"><span style="color: #008000"> first time through if the leader hasn't changed give ZooKeeper a second to recover</span></span><span style="color: #008000">
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>   </span><span style="color: #008000"><span class="comment">//</span></span><span class="comment"><span style="color: #008000"> second time, assume the broker did recover before failover, or it was a non-Broker issue</span></span><span style="color: #008000">
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>   </span><span style="color: #008000"><span class="comment">//</span>
</span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>   goToSleep = <span style="color: #0000ff"><span class="keyword">true</span></span><span style="color: #000000">;
<span class="indent">  </span><span class="indent">  </span>   } </span><span style="color: #0000ff"><span class="keyword">else</span></span><span style="color: #000000"> {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>   </span><span style="color: #0000ff"><span class="keyword">return</span></span><span style="color: #000000"> metadata.leader().host();
<span class="indent">  </span><span class="indent">  </span>   }
<span class="indent">  </span><span class="indent">  </span>   </span><span style="color: #0000ff"><span class="keyword">if</span></span><span style="color: #000000"> (goToSleep) {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>   </span><span style="color: #0000ff"><span class="keyword">try</span></span><span style="color: #000000"> {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>   Thread.sleep(</span><span class="number">1000</span><span style="color: #000000">);
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>   } </span><span style="color: #0000ff"><span class="keyword">catch</span></span><span style="color: #000000"> (InterruptedException ie) {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>   }
<span class="indent">  </span><span class="indent">  </span>   }
<span class="indent">  </span>   }
<span class="indent">  </span>   System.out.println(</span><span class="string">"Unable to find new leader after Broker failure. Exiting"</span><span style="color: #000000">);
<span class="indent">  </span>   </span><span style="color: #0000ff"><span class="keyword">throw</span></span> <span style="color: #0000ff"><span class="keyword">new</span></span> Exception(<span class="string">"Unable to find new leader after Broker failure. Exiting"</span><span style="color: #000000">);
   }</span></pre>
            <p>
        <u>Full Source Code</u>
      </p>

        <pre class="prettyprint java"><span style="color: #0000ff"><span class="keyword">package</span></span><span style="color: #000000"> com.test.simple;
 
</span><span style="color: #0000ff"><span class="keyword">import</span></span><span style="color: #000000"> kafka.api.FetchRequest;
</span><span style="color: #0000ff"><span class="keyword">import</span></span><span style="color: #000000"> kafka.api.FetchRequestBuilder;
</span><span style="color: #0000ff"><span class="keyword">import</span></span><span style="color: #000000"> kafka.api.PartitionOffsetRequestInfo;
</span><span style="color: #0000ff"><span class="keyword">import</span></span><span style="color: #000000"> kafka.common.ErrorMapping;
</span><span style="color: #0000ff"><span class="keyword">import</span></span><span style="color: #000000"> kafka.common.TopicAndPartition;
</span><span style="color: #0000ff"><span class="keyword">import</span></span> kafka.javaapi.*<span style="color: #000000">;
</span><span style="color: #0000ff"><span class="keyword">import</span></span><span style="color: #000000"> kafka.javaapi.consumer.SimpleConsumer;
</span><span style="color: #0000ff"><span class="keyword">import</span></span><span style="color: #000000"> kafka.message.MessageAndOffset;
 
</span><span style="color: #0000ff"><span class="keyword">import</span></span><span style="color: #000000"> java.nio.ByteBuffer;
</span><span style="color: #0000ff"><span class="keyword">import</span></span><span style="color: #000000"> java.util.ArrayList;
</span><span style="color: #0000ff"><span class="keyword">import</span></span><span style="color: #000000"> java.util.Collections;
</span><span style="color: #0000ff"><span class="keyword">import</span></span><span style="color: #000000"> java.util.HashMap;
</span><span style="color: #0000ff"><span class="keyword">import</span></span><span style="color: #000000"> java.util.List;
</span><span style="color: #0000ff"><span class="keyword">import</span></span><span style="color: #000000"> java.util.Map;
 
</span><span style="color: #0000ff"><span class="keyword">public</span></span> <span style="color: #0000ff"><span class="class"><span class="keyword">class</span></span></span><span class="class"><span style="color: #000000"> <span class="title">SimpleExample</span> {</span></span><span style="color: #000000">
<span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">public</span></span> <span style="color: #0000ff"><span class="keyword">static</span></span> <span style="color: #0000ff"><span class="keyword">void</span></span><span style="color: #000000"> main(String args[]) {
<span class="indent">  </span><span class="indent">  </span>SimpleExample example </span>= <span style="color: #0000ff"><span class="keyword">new</span></span><span style="color: #000000"> SimpleExample();
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">long</span></span> maxReads = Long.parseLong(args[<span class="number">0</span><span style="color: #000000">]);
<span class="indent">  </span><span class="indent">  </span>String topic </span>= args[<span class="number">1</span><span style="color: #000000">];
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">int</span></span> partition = Integer.parseInt(args[<span class="number">2</span><span style="color: #000000">]);
<span class="indent">  </span><span class="indent">  </span>List</span>&lt;String&gt; seeds = <span style="color: #0000ff"><span class="keyword">new</span></span> ArrayList&lt;String&gt;<span style="color: #000000">();
<span class="indent">  </span><span class="indent">  </span>seeds.add(args[</span><span class="number">3</span><span style="color: #000000">]);
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">int</span></span> port = Integer.parseInt(args[<span class="number">4</span><span style="color: #000000">]);
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">try</span></span><span style="color: #000000"> {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>example.run(maxReads, topic, partition, seeds, port);
<span class="indent">  </span><span class="indent">  </span>} </span><span style="color: #0000ff"><span class="keyword">catch</span></span><span style="color: #000000"> (Exception e) {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>System.out.println(</span><span class="string">"Oops:"</span> +<span style="color: #000000"> e);
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span> e.printStackTrace();
<span class="indent">  </span><span class="indent">  </span>}
<span class="indent">  </span>}
 
<span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">private</span></span> List&lt;String&gt; m_replicaBrokers = <span style="color: #0000ff"><span class="keyword">new</span></span> ArrayList&lt;String&gt;<span style="color: #000000">();
 
<span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">public</span></span><span style="color: #000000"> SimpleExample() {
<span class="indent">  </span><span class="indent">  </span>m_replicaBrokers </span>= <span style="color: #0000ff"><span class="keyword">new</span></span> ArrayList&lt;String&gt;<span style="color: #000000">();
<span class="indent">  </span>}
 
<span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">public</span></span> <span style="color: #0000ff"><span class="keyword">void</span></span> run(<span style="color: #0000ff"><span class="keyword">long</span></span> a_maxReads, String a_topic, <span style="color: #0000ff"><span class="keyword">int</span></span> a_partition, List&lt;String&gt; a_seedBrokers, <span style="color: #0000ff"><span class="keyword">int</span></span> a_port) <span style="color: #0000ff"><span class="keyword">throws</span></span><span style="color: #000000"> Exception {
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #008000"><span class="comment">//</span></span><span class="comment"><span style="color: #008000"> find the meta data about the topic and partition we are interested in</span></span><span style="color: #008000">
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #008000"><span class="comment">//</span>
</span><span class="indent">  </span><span class="indent">  </span>PartitionMetadata metadata =<span style="color: #000000"> findLeader(a_seedBrokers, a_port, a_topic, a_partition);
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">if</span></span> (metadata == <span style="color: #0000ff"><span class="keyword">null</span></span><span style="color: #000000">) {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>System.out.println(</span><span class="string">"Can't find metadata for Topic and Partition. Exiting"</span><span style="color: #000000">);
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">return</span></span><span style="color: #000000">;
<span class="indent">  </span><span class="indent">  </span>}
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">if</span></span> (metadata.leader() == <span style="color: #0000ff"><span class="keyword">null</span></span><span style="color: #000000">) {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>System.out.println(</span><span class="string">"Can't find Leader for Topic and Partition. Exiting"</span><span style="color: #000000">);
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">return</span></span><span style="color: #000000">;
<span class="indent">  </span><span class="indent">  </span>}
<span class="indent">  </span><span class="indent">  </span>String leadBroker </span>=<span style="color: #000000"> metadata.leader().host();
<span class="indent">  </span><span class="indent">  </span>String clientName </span>= <span class="string">"Client_"</span> + a_topic + <span class="string">"_"</span> +<span style="color: #000000"> a_partition;
 
<span class="indent">  </span><span class="indent">  </span>SimpleConsumer consumer </span>= <span style="color: #0000ff"><span class="keyword">new</span></span> SimpleConsumer(leadBroker, a_port, <span class="number">100000</span>, <span class="number">64</span> * <span class="number">1024</span><span style="color: #000000">, clientName);
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">long</span></span> readOffset =<span style="color: #000000"> getLastOffset(consumer,a_topic, a_partition, kafka.api.OffsetRequest.EarliestTime(), clientName);
 
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">int</span></span> numErrors = <span class="number">0</span><span style="color: #000000">;
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">while</span></span> (a_maxReads &gt; <span class="number">0</span><span style="color: #000000">) {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">if</span></span> (consumer == <span style="color: #0000ff"><span class="keyword">null</span></span><span style="color: #000000">) {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>consumer </span>= <span style="color: #0000ff"><span class="keyword">new</span></span> SimpleConsumer(leadBroker, a_port, <span class="number">100000</span>, <span class="number">64</span> * <span class="number">1024</span><span style="color: #000000">, clientName);
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>}
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>FetchRequest req </span>= <span style="color: #0000ff"><span class="keyword">new</span></span><span style="color: #000000"> FetchRequestBuilder()
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>.clientId(clientName)
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>.addFetch(a_topic, a_partition, readOffset, </span><span class="number">100000</span>) <span style="color: #008000"><span class="comment">//</span></span><span class="comment"><span style="color: #008000"> Note: this fetchSize of 100000 might need to be increased if large batches are written to Kafka</span></span><span style="color: #008000"></span>
<span style="color: #000000"><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>.build();
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>FetchResponse fetchResponse </span>=<span style="color: #000000"> consumer.fetch(req);
 
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">if</span></span><span style="color: #000000"> (fetchResponse.hasError()) {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>numErrors</span>++<span style="color: #000000">;
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #008000"><span class="comment">//</span></span><span class="comment"><span style="color: #008000"> Something went wrong!</span></span><span style="color: #008000"></span>
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span style="color: #0000ff"><span class="keyword">short</span></span> code =<span style="color: #000000"> fetchResponse.errorCode(a_topic, a_partition);
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>System.out.println(</span><span class="string">"Error fetching data from the Broker:"</span> + leadBroker + <span class="string">" Reason: "</span> +<span style="color: #000000"> code);
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">if</span></span> (numErrors &gt; <span class="number">5</span>) <span style="color: #0000ff"><span class="keyword">break</span></span><span style="color: #000000">;
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">if</span></span> (code ==<span style="color: #000000"> ErrorMapping.OffsetOutOfRangeCode())  {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #008000"><span class="comment">//</span></span><span class="comment"><span style="color: #008000"> We asked for an invalid offset. For simple case ask for the last element to reset</span></span><span style="color: #008000"></span>
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>readOffset =<span style="color: #000000"> getLastOffset(consumer,a_topic, a_partition, kafka.api.OffsetRequest.LatestTime(), clientName);
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">continue</span></span><span style="color: #000000">;
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>}
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>consumer.close();
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>consumer </span>= <span style="color: #0000ff"><span class="keyword">null</span></span><span style="color: #000000">;
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>leadBroker </span>=<span style="color: #000000"> findNewLeader(leadBroker, a_topic, a_partition, a_port);
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">continue</span></span><span style="color: #000000">;
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>}
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>numErrors </span>= <span class="number">0</span><span style="color: #000000">;
 
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">long</span></span> numRead = <span class="number">0</span><span style="color: #000000">;
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">for</span></span><span style="color: #000000"> (MessageAndOffset messageAndOffset : fetchResponse.messageSet(a_topic, a_partition)) {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">long</span></span> currentOffset =<span style="color: #000000"> messageAndOffset.offset();
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">if</span></span> (currentOffset &lt;<span style="color: #000000"> readOffset) {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>System.out.println(</span><span class="string">"Found an old offset: "</span> + currentOffset + <span class="string">" Expecting: "</span> +<span style="color: #000000"> readOffset);
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">continue</span></span><span style="color: #000000">;
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>}
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>readOffset </span>=<span style="color: #000000"> messageAndOffset.nextOffset();
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>ByteBuffer payload </span>=<span style="color: #000000"> messageAndOffset.message().payload();
 
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">byte</span></span>[] bytes = <span style="color: #0000ff"><span class="keyword">new</span></span> <span style="color: #0000ff"><span class="keyword">byte</span></span><span style="color: #000000">[payload.limit()];
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>payload.get(bytes);
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>System.out.println(String.valueOf(messageAndOffset.offset()) </span>+ <span class="string">": "</span> + <span style="color: #0000ff"><span class="keyword">new</span></span> String(bytes, <span class="string">"UTF-8"</span><span style="color: #000000">));
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>numRead</span>++<span style="color: #000000">;
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>a_maxReads</span>--<span style="color: #000000">;
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>}
 
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">if</span></span> (numRead == <span class="number">0</span><span style="color: #000000">) {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">try</span></span><span style="color: #000000"> {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>Thread.sleep(</span><span class="number">1000</span><span style="color: #000000">);
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>} </span><span style="color: #0000ff"><span class="keyword">catch</span></span><span style="color: #000000"> (InterruptedException ie) {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>}
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>}
<span class="indent">  </span><span class="indent">  </span>}
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">if</span></span> (consumer != <span style="color: #0000ff"><span class="keyword">null</span></span><span style="color: #000000">) consumer.close();
<span class="indent">  </span>}
 
<span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">public</span></span> <span style="color: #0000ff"><span class="keyword">static</span></span> <span style="color: #0000ff"><span class="keyword">long</span></span> getLastOffset(SimpleConsumer consumer, String topic, <span style="color: #0000ff"><span class="keyword">int</span></span><span style="color: #000000"> partition,
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span> </span><span style="color: #0000ff"><span class="keyword">long</span></span><span style="color: #000000"> whichTime, String clientName) {
<span class="indent">  </span><span class="indent">  </span>TopicAndPartition topicAndPartition </span>= <span style="color: #0000ff"><span class="keyword">new</span></span><span style="color: #000000"> TopicAndPartition(topic, partition);
<span class="indent">  </span><span class="indent">  </span>Map</span>&lt;TopicAndPartition, PartitionOffsetRequestInfo&gt; requestInfo = <span style="color: #0000ff"><span class="keyword">new</span></span> HashMap&lt;TopicAndPartition, PartitionOffsetRequestInfo&gt;<span style="color: #000000">();
<span class="indent">  </span><span class="indent">  </span>requestInfo.put(topicAndPartition, </span><span style="color: #0000ff"><span class="keyword">new</span></span> PartitionOffsetRequestInfo(whichTime, <span class="number">1</span><span style="color: #000000">));
<span class="indent">  </span><span class="indent">  </span>kafka.javaapi.OffsetRequest request </span>= <span style="color: #0000ff"><span class="keyword">new</span></span><span style="color: #000000"> kafka.javaapi.OffsetRequest(
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>requestInfo, kafka.api.OffsetRequest.CurrentVersion(), clientName);
<span class="indent">  </span><span class="indent">  </span>OffsetResponse response </span>=<span style="color: #000000"> consumer.getOffsetsBefore(request);
 
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">if</span></span><span style="color: #000000"> (response.hasError()) {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>System.out.println(</span><span class="string">"Error fetching data Offset Data the Broker. Reason: "</span> +<span style="color: #000000"> response.errorCode(topic, partition) );
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">return</span></span> <span class="number">0</span><span style="color: #000000">;
<span class="indent">  </span><span class="indent">  </span>}
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">long</span></span>[] offsets =<span style="color: #000000"> response.offsets(topic, partition);
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">return</span></span> offsets[<span class="number">0</span><span style="color: #000000">];
<span class="indent">  </span>}
 
<span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">private</span></span> String findNewLeader(String a_oldLeader, String a_topic, <span style="color: #0000ff"><span class="keyword">int</span></span> a_partition, <span style="color: #0000ff"><span class="keyword">int</span></span> a_port) <span style="color: #0000ff"><span class="keyword">throws</span></span><span style="color: #000000"> Exception {
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">for</span></span> (<span style="color: #0000ff"><span class="keyword">int</span></span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++<span style="color: #000000">) {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">boolean</span></span> goToSleep = <span style="color: #0000ff"><span class="keyword">false</span></span><span style="color: #000000">;
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>PartitionMetadata metadata </span>=<span style="color: #000000"> findLeader(m_replicaBrokers, a_port, a_topic, a_partition);
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">if</span></span> (metadata == <span style="color: #0000ff"><span class="keyword">null</span></span><span style="color: #000000">) {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>goToSleep </span>= <span style="color: #0000ff"><span class="keyword">true</span></span><span style="color: #000000">;
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>} </span><span style="color: #0000ff"><span class="keyword">else</span></span> <span style="color: #0000ff"><span class="keyword">if</span></span> (metadata.leader() == <span style="color: #0000ff"><span class="keyword">null</span></span><span style="color: #000000">) {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>goToSleep </span>= <span style="color: #0000ff"><span class="keyword">true</span></span><span style="color: #000000">;
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>} </span><span style="color: #0000ff"><span class="keyword">else</span></span> <span style="color: #0000ff"><span class="keyword">if</span></span> (a_oldLeader.equalsIgnoreCase(metadata.leader().host()) &amp;&amp; i == <span class="number">0</span><span style="color: #000000">) {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #008000"><span class="comment">//</span></span><span class="comment"><span style="color: #008000"> first time through if the leader hasn't changed give ZooKeeper a second to recover</span></span><span style="color: #008000">
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #008000"><span class="comment">//</span></span><span class="comment"><span style="color: #008000"> second time, assume the broker did recover before failover, or it was a non-Broker issue</span></span><span style="color: #008000">
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #008000"><span class="comment">//</span>
</span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>goToSleep = <span style="color: #0000ff"><span class="keyword">true</span></span><span style="color: #000000">;
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>} </span><span style="color: #0000ff"><span class="keyword">else</span></span><span style="color: #000000"> {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">return</span></span><span style="color: #000000"> metadata.leader().host();
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>}
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">if</span></span><span style="color: #000000"> (goToSleep) {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">try</span></span><span style="color: #000000"> {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>Thread.sleep(</span><span class="number">1000</span><span style="color: #000000">);
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>} </span><span style="color: #0000ff"><span class="keyword">catch</span></span><span style="color: #000000"> (InterruptedException ie) {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>}
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>}
<span class="indent">  </span><span class="indent">  </span>}
<span class="indent">  </span><span class="indent">  </span>System.out.println(</span><span class="string">"Unable to find new leader after Broker failure. Exiting"</span><span style="color: #000000">);
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">throw</span></span> <span style="color: #0000ff"><span class="keyword">new</span></span> Exception(<span class="string">"Unable to find new leader after Broker failure. Exiting"</span><span style="color: #000000">);
<span class="indent">  </span>}
 
<span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">private</span></span> PartitionMetadata findLeader(List&lt;String&gt; a_seedBrokers, <span style="color: #0000ff"><span class="keyword">int</span></span> a_port, String a_topic, <span style="color: #0000ff"><span class="keyword">int</span></span><span style="color: #000000"> a_partition) {
<span class="indent">  </span><span class="indent">  </span>PartitionMetadata returnMetaData </span>= <span style="color: #0000ff"><span class="keyword">null</span></span><span style="color: #000000">;
<span class="indent">  </span><span class="indent">  </span>loop:
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">for</span></span><span style="color: #000000"> (String seed : a_seedBrokers) {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>SimpleConsumer consumer </span>= <span style="color: #0000ff"><span class="keyword">null</span></span><span style="color: #000000">;
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">try</span></span><span style="color: #000000"> {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>consumer </span>= <span style="color: #0000ff"><span class="keyword">new</span></span> SimpleConsumer(seed, a_port, <span class="number">100000</span>, <span class="number">64</span> * <span class="number">1024</span>, <span class="string">"leaderLookup"</span><span style="color: #000000">);
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>List</span>&lt;String&gt; topics =<span style="color: #000000"> Collections.singletonList(a_topic);
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>TopicMetadataRequest req </span>= <span style="color: #0000ff"><span class="keyword">new</span></span><span style="color: #000000"> TopicMetadataRequest(topics);
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>kafka.javaapi.TopicMetadataResponse resp </span>=<span style="color: #000000"> consumer.send(req);
 
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>List</span>&lt;TopicMetadata&gt; metaData =<span style="color: #000000"> resp.topicsMetadata();
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">for</span></span><span style="color: #000000"> (TopicMetadata item : metaData) {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">for</span></span><span style="color: #000000"> (PartitionMetadata part : item.partitionsMetadata()) {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">if</span></span> (part.partitionId() ==<span style="color: #000000"> a_partition) {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>returnMetaData </span>=<span style="color: #000000"> part;
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">break</span></span><span style="color: #000000"> loop;
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>}
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>}
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>}
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>} </span><span style="color: #0000ff"><span class="keyword">catch</span></span><span style="color: #000000"> (Exception e) {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>System.out.println(</span><span class="string">"Error communicating with Broker ["</span> + seed + <span class="string">"] to find Leader for ["</span> +<span style="color: #000000"> a_topic
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span>+ <span class="string">", "</span> + a_partition + <span class="string">"] Reason: "</span> +<span style="color: #000000"> e);
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>} </span><span style="color: #0000ff"><span class="keyword">finally</span></span><span style="color: #000000"> {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">if</span></span> (consumer != <span style="color: #0000ff"><span class="keyword">null</span></span><span style="color: #000000">) consumer.close();
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>}
<span class="indent">  </span><span class="indent">  </span>}
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">if</span></span> (returnMetaData != <span style="color: #0000ff"><span class="keyword">null</span></span><span style="color: #000000">) {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>m_replicaBrokers.clear();
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">for</span></span><span style="color: #000000"> (kafka.cluster.Broker replica : returnMetaData.replicas()) {
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>m_replicaBrokers.add(replica.host());
<span class="indent">  </span><span class="indent">  </span><span class="indent">  </span>}
<span class="indent">  </span><span class="indent">  </span>}
<span class="indent">  </span><span class="indent">  </span></span><span style="color: #0000ff"><span class="keyword">return</span></span><span style="color: #000000"> returnMetaData;
<span class="indent">  </span>}
}</span></pre>
          </div>
  </div>
</div>

        </div>
        <div class="bottom_ad">
                <script type="text/javascript">
      var cpro_id = "u1665123";
    </script>
    <script src="./Kafka Consumer接口 - fxjwind - 推酷_files/c.js" type="text/javascript"></script><div id="BAIDU_DUP_wrapper_u1665123_0"><iframe id="cproIframe_u1665123" width="580" height="90" src="./Kafka Consumer接口 - fxjwind - 推酷_files/acom.htm" align="center,center" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" allowtransparency="true"></iframe></div><script charset="utf-8" src="./Kafka Consumer接口 - fxjwind - 推酷_files/acom"></script>

        </div>
        <div class="article_social">
        <div class="article_like">
                <button class="btn btn-large liked" id="my_like2" data_id="fI7J3m">
                    <i class="icon-heart-empty"></i>
                    赞一个
                </button>
                <button class="btn btn-large liked" id="my_like" data_id="fI7J3m">
                    <i class="icon-star-empty"></i>
                    收 藏
                </button>
        </div>
        </div>
           <div id="site_articles">
              <div class="article-part-title">
                <span>推荐文章</span>
              </div>
          <ul class="side_article_list">
                <li class="side_article_list_item">
                    1.<a href="http://www.tuicool.com/articles/YzYzQ3M" target="_blank" title="琐碎-初看HBase">
                    琐碎-初看HBase
                </a>
                </li>
                <li class="side_article_list_item">
                    2.<a href="http://www.tuicool.com/articles/UfUvamE" target="_blank" title="Hadoop源码学习笔记(1) ——第二季开始——找到Main函数及读一读Configure类">
                    Hadoop源码学习笔记(1) ——第二季开始——找到Main函数及读一读Configure类
                </a>
                </li>
                <li class="side_article_list_item">
                    3.<a href="http://www.tuicool.com/articles/QrYNBj" target="_blank" title="基于Hadoop MapReduce的分布式数据流聚类算法研究">
                    基于Hadoop MapReduce的分布式数据流聚类算法研究
                </a>
                </li>
                <li class="side_article_list_item">
                    4.<a href="http://www.tuicool.com/articles/nYZJvi" target="_blank" title="探索高级分析平台，第 3
   部分: 使用模式来分析非结构化文本">
                    探索高级分析平台，第 3
   部分: 使用模式来分析非结构化文本
                </a>
                </li>
                <li class="side_article_list_item">
                    5.<a href="http://www.tuicool.com/articles/BFVr6v" target="_blank" title="从WordCount看MapReduce框架执行流程">
                    从WordCount看MapReduce框架执行流程
                </a>
                </li>
                <li class="side_article_list_item">
                    6.<a href="http://www.tuicool.com/articles/IFVfyqv" target="_blank" title="视频-某hadoop高级应用-搜索提示">
                    视频-某hadoop高级应用-搜索提示
                </a>
                </li>
         </ul>
        </div>

        <div id="kan_articles"> <div class="article-part-title"> <span>相关推刊</span></div><ul class="kan-list">          <li class="kan-item">            <a href="http://www.tuicool.com/kans/147453032" target="_blank" class="kan-item-head">              <small>刊主：Jensen</small>              <img class="kan-cover" src="./Kafka Consumer接口 - fxjwind - 推酷_files/zAjyEr.jpg!kan">            </a>            <span class="kan-detail">              <a href="http://www.tuicool.com/kans/147453032" target="_blank">《默认推刊》</a>              <i class="kan-num">12</i>            </span>          </li>        </ul><i class="clearfix"></i></div>
        <div id="article_weibo" style="display:none;"></div>
        <div class="comments">
    <div class="comments-area" style="">
    <div class="comments-header">
        <h5>我来评几句</h5>
        <div class="alert comment-alert alert-error" style="display:none;">
            错误
        </div>
            <textarea cols="60" rows="5" id="comment-body" placeholder="请输入评论内容..."></textarea>
            <span class="btn btn-medium btn-submit" id="comment-submit">登录后评论</span>
        <p style="margin-top: 5px;margin-left:10px;">
            已发表评论数(<span class="comment_cnt">0</span>)
        </p>
    </div>
    <div class="comments-list">
        <div class="empty-cmts alert alert-success" style="display:none;">
            没有更多评论了^^
        </div>
    </div>
    <div class="more-comments" style="display:none;">
        <a href="">更多评论</a>
    </div>
    <div class="load-fail" style="display: none; ">
        评论加载失败，<a href="javascript:reload_comments('fI7J3m',1,0,-1);">重新加载</a>
    </div>
    </div>
</div>

    </div>
         <div class="span4 article_right_side">
            <div class="right_top">
    <div class="article_related_site">
    <h4 class="article-part-title">相关站点</h4>
    <div class="article_related_site_body">
        <div class="logo">
            <img src="./Kafka Consumer接口 - fxjwind - 推酷_files/EfaUZrr.png">
        </div>
        <div class="name">
            <div>
                <a href="http://www.tuicool.com/sites/EfaUZrr" target="_blank"> 博客园_fxjwind</a>
            </div>
            <div id="social-info">
            </div>
            <div>
                    <input type="button" class="btn btn-success right_site_follow" value="+ 订阅" id="my_follow" data_id="EfaUZrr">
            </div>
        </div>
    </div>
</div>

<div id="related_topics" class="related_topics2">
    <h4 class="article-part-title">相关主题</h4>
    <ul>
        <li>
            <a href="http://www.tuicool.com/topics/11090075" target="_blank" class="kan-item-head">
              <small>Kafka</small>
              <img class="kan-cover" src="./Kafka Consumer接口 - fxjwind - 推酷_files/11090075.png" alt="Kafka">
            </a>
          </li>
    </ul>
</div>



       <script type="text/javascript">
        var cpro_id = "u1735906";
      </script>
      <script src="./Kafka Consumer接口 - fxjwind - 推酷_files/c.js" type="text/javascript"></script><div id="BAIDU_DUP_wrapper_u1735906_0"><iframe id="cproIframe_u1735906" width="300" height="250" src="./Kafka Consumer接口 - fxjwind - 推酷_files/acom(4).htm" align="center,center" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" allowtransparency="true"></iframe></div><script charset="utf-8" src="./Kafka Consumer接口 - fxjwind - 推酷_files/acom(1)"></script>

       <script type="text/javascript">
        var cpro_id = "u1758461";
      </script>
      <script src="./Kafka Consumer接口 - fxjwind - 推酷_files/c.js" type="text/javascript"></script><div id="BAIDU_DUP_wrapper_u1758461_0"><iframe id="cproIframe_u1758461" width="300" height="250" src="./Kafka Consumer接口 - fxjwind - 推酷_files/acom(3).htm" align="center,center" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" allowtransparency="true"></iframe></div><script charset="utf-8" src="./Kafka Consumer接口 - fxjwind - 推酷_files/acom(2)"></script>

<div id="right_site_articles">
    <div class="article-part-title">
        <span>热门文章</span>
    </div>
    <ul class="side_article_list">
        <li class="side_article_list_item">
            1.<a href="http://www.tuicool.com/articles/FFjq2q" target="_blank" title="hadoop集群警告No groups available for user dr.who"> hadoop集群警告No groups available for user dr.who </a>
        </li>
        <li class="side_article_list_item">
            2.<a href="http://www.tuicool.com/articles/UfUvamE" target="_blank" title="Hadoop源码学习笔记(1) ——第二季开始——找到Main函数及读一读Configure类"> Hadoop源码学习笔记(1) ——第二季开始——找到Main函数及读一读Configure类 </a>
        </li>
        <li class="side_article_list_item">
            3.<a href="http://www.tuicool.com/articles/nYZJvi" target="_blank" title="探索高级分析平台，第 3
   部分: 使用模式来分析非结构化文本"> 探索高级分析平台，第 3
   部分: 使用模式来分析非结构化文本 </a>
        </li>
        <li class="side_article_list_item">
            4.<a href="http://www.tuicool.com/articles/fUjqAjA" target="_blank" title="跨越 Hadoop: 通过集成 IBM Worklight 与 IBM InfoSphere BigInsights on IBM Bluemix 在移动应用..."> 跨越 Hadoop: 通过集成 IBM Worklight 与 IBM InfoSphere BigInsights on IBM ... </a>
        </li>
        <li class="side_article_list_item">
            5.<a href="http://www.tuicool.com/articles/BFVr6v" target="_blank" title="从WordCount看MapReduce框架执行流程"> 从WordCount看MapReduce框架执行流程 </a>
        </li>
        <li class="side_article_list_item">
            6.<a href="http://www.tuicool.com/articles/Ynyym2" target="_blank" title="腾讯TDW千台Spark千亿节点对相似度计算"> 腾讯TDW千台Spark千亿节点对相似度计算 </a>
        </li>
    </ul>
</div>

</div>

<div class="operate_zone" style="position: inherit; top: 0px; ">
    <h4 class="side_article_list_title">分享该文章</h4>
    <div class="share_zone">
    <div class="bdsharebuttonbox bdshare-button-style1-24" data-bd-bind="1414668728149"> 
         <a href="http://www.tuicool.com/articles/fI7J3m#" class="bds_tsina" data-cmd="tsina" title="分享到新浪微博"></a>
        <a href="http://www.tuicool.com/articles/fI7J3m#" class="bds_qzone" data-cmd="qzone" title="分享到QQ空间"></a>
        <a href="http://www.tuicool.com/articles/fI7J3m#" class="bds_tqq" data-cmd="tqq" title="分享到腾讯微博"></a>
        <a href="http://www.tuicool.com/articles/fI7J3m#" class="bds_renren" data-cmd="renren" title="分享到人人网"></a>
        <a href="http://www.tuicool.com/articles/fI7J3m#" class="bds_weixin" data-cmd="weixin" title="分享到微信"></a>
        <a href="http://www.tuicool.com/articles/fI7J3m#" class="bds_more" data-cmd="more"></a>
     </div>
    <script>
        window._bd_share_config = {
            "common" : {
                "bdSnsKey" : {
                    "tsina" : "3113829255",
                    "tqq" : "801536792"
                },
                "bdText" : "Kafka Consumer接口 - fxjwind (分享自 @推酷网)",
                "bdMini" : "2",
                "bdMiniList" : false,
                "bdPic" : "",
                "bdStyle" : "1",
                "bdSize" : "24"
            },
            "share" : {}
        };
        with (document)
        0[(getElementsByTagName('head')[0] || body).appendChild(createElement('script')).src = 'http://bdimg.share.baidu.com/static/api/js/share.js?v=89860593.js?cdnversion=' + ~(-new Date() / 36e5)];
    </script>
</div>
          <script type="text/javascript"><!--
google_ad_client = "ca-pub-7054762349007490";
google_ad_host = "ca-host-pub-7209811712445461";
google_ad_slot = "5705695566";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<script type="text/javascript" src="./Kafka Consumer接口 - fxjwind - 推酷_files/show_ads.js">
</script><ins id="aswift_0_expand" style="display:inline-table;border:none;height:250px;margin:0;padding:0;position:relative;visibility:visible;width:300px;background-color:transparent"><ins id="aswift_0_anchor" style="display:block;border:none;height:250px;margin:0;padding:0;position:relative;visibility:visible;width:300px;background-color:transparent"><iframe width="300" height="250" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_0" name="aswift_0" style="left:0;position:absolute;top:0;"></iframe></ins></ins>

</div>
         </div>
</div>

<div id="myLoginModal" class="modal hide fade">
    <div class="modal-header">
        <a class="close" data-dismiss="modal">×</a>
        <h3>用户登陆</h3>
    </div>
    <div class="modal-body">
        <form method="post" action="http://www.tuicool.com/login" class="form-horizontal" id="login-form">
            <div class="control-group">
                <input id="xlEmail" name="email" type="text" placeholder="邮箱">
            </div>
            <div class="control-group">
                <input id="xlPassword" name="password" type="password" placeholder="密码">
            </div>
            <div class="control-group">
                <button type="submit" class="btn btn-primary">
                    &nbsp;&nbsp;登&nbsp;&nbsp;&nbsp;陆&nbsp;&nbsp;
                </button>
            </div>
        </form>
    </div>
</div>

<div class="read-later-alert">
</div>
<style type="text/css">
    #dup-cnt {
        display: none;
    }
    .btn-large {
        padding: 0;
    }
    .load-fail {
        display: none;
    }

</style>
<script src="./Kafka Consumer接口 - fxjwind - 推酷_files/highlight.pack.js"></script>
<script type="text/javascript">
      $(document).ready( function() {
         // async_get_latest_articles('EfaUZrr','fI7J3m');
         get_weibo_async("fI7J3m");
         related_kan("fI7J3m");
        window.page = 0;
        window.last = 0;    
        window.first = true;    
        resize_article_image('#nei', 550);
                load_comments("fI7J3m",1,0,-1);
                window.uid = -1;                
        open_add_article_to_kan("false");
        async_do_like2_article(); 
        $('pre').each(function(i, e) {
            hljs.highlightBlock(e, "<span class='indent'>  </span>", false)
        });
       });
          
       handle_follow_site("#my_follow","已订阅","+ 订阅");
</script>


</div>

    <div class="footer">
    <div class="footer-inner">
    <dl class="about-link site-link">
        <dt>
            网站相关
        </dt>
        <dd>
            <a target="_blank" href="http://www.tuicool.com/about">关于我们</a>
        </dd>
        <dd>
            <a target="_blank" href="http://www.tuicool.com/mobile">移动应用</a>
        </dd>
        <dd>
            <a target="_blank" href="http://huodong.tuicool.com/">推酷活动</a>
        </dd>
        <dd>
            <a target="_blank" href="http://www.tuicool.com/bbs/go/issues">建议反馈</a>
        </dd>
        <dd>
            <a target="_blank" href="http://www.tuicool.com/changelog">更新日志</a>
        </dd>
    </dl>
    <dl class="site-link follow-link">
        <dt>
            关注我们
        </dt>
        <dd>
            <a target="_blank" href="http://e.weibo.com/tuicool2012"><img src="./Kafka Consumer接口 - fxjwind - 推酷_files/weibo-32.png">推酷网</a>
        </dd>
        <dd><img src="./Kafka Consumer接口 - fxjwind - 推酷_files/weixin-32.png">tuicool2012
        </dd>
        <dd><img src="./Kafka Consumer接口 - fxjwind - 推酷_files/qun-54.png">QQ群:164644910
        </dd>
    </dl>
    <dl class="site-link links">
        <dt>
            友情链接
        </dt>
        <dd>
                <a href="http://www.woshipm.com/" title="人人都是产品经理" target="_blank">人人都是产品经理</a>&nbsp;&nbsp;
                <a href="http://www.tmtforum.com/" title="TMTForum" target="_blank">TMTForum</a>&nbsp;&nbsp;
                <a href="http://www.moobuu.com/" title="魔部网" target="_blank">魔部网</a>&nbsp;&nbsp;
                <a href="http://www.pm265.com/" title="PM256" target="_blank">PM256</a>&nbsp;&nbsp;
                <a href="http://www.pintu360.com/" title="品途网" target="_blank">品途网</a>&nbsp;&nbsp;
                <a href="http://www.yidonghua.com/" title="移动信息化" target="_blank">移动信息化</a>&nbsp;&nbsp;
                <a href="http://www.snsiu.com/" title="行晓网" target="_blank">行晓网</a>&nbsp;&nbsp;
                <a href="http://code4app.com/" title="Code4App" target="_blank">Code4App</a>&nbsp;&nbsp;
                <a href="http://www.taskcity.com/" title="智城外包网" target="_blank">智城外包网</a>&nbsp;&nbsp;
                <a href="http://gkkgo.com/" title="KK学习助手" target="_blank">KK学习助手</a>&nbsp;&nbsp;
                <a href="http://blog.lamper.cn/" title="LAMP人" target="_blank">LAMP人</a>&nbsp;&nbsp;
                <a href="http://www.eoe.cn/" title="移动开发者社区" target="_blank">移动开发者社区</a>&nbsp;&nbsp;
                <a href="http://www.apkway.com/forum.php" title="安卓航班网" target="_blank">安卓航班网</a>&nbsp;&nbsp;
                <a href="http://www.huxiu.com/" title="虎嗅" target="_blank">虎嗅</a>&nbsp;&nbsp;
                <a href="http://www.ycpai.com/" title="缘创派" target="_blank">缘创派</a>&nbsp;&nbsp;
                <a href="http://www.iterduo.com/" title="IT耳朵" target="_blank">IT耳朵</a>&nbsp;&nbsp;
                <a href="http://www.iresearch.cn/" title="艾瑞网" target="_blank">艾瑞网</a>&nbsp;&nbsp;
                <a href="http://mediaworks.caixin.com/" title="创媒工场" target="_blank">创媒工场</a>&nbsp;&nbsp;
                <a href="http://www.guigu.org/" title="硅谷网" target="_blank">硅谷网</a>&nbsp;&nbsp;
                <a href="https://mos.meituan.com/" title="美团云" target="_blank">美团云</a>&nbsp;&nbsp;
                <a href="http://www.managershare.com/" title="经理人分享" target="_blank">经理人分享</a>&nbsp;&nbsp;
                <a href="http://www.shichangbu.com/" title="市场部网" target="_blank">市场部网</a>&nbsp;&nbsp;
                <a href="http://www.ikanchai.com/" title="砍柴网" target="_blank">砍柴网</a>&nbsp;&nbsp;
                <a href="http://www.cocoachina.com/" title="CocoaChina" target="_blank">CocoaChina</a>&nbsp;&nbsp;
                <a href="http://www.ibeifeng.com/" title="北风网" target="_blank">北风网</a>&nbsp;&nbsp;
                <a href="http://cn.cocos2d-x.org/" title="Cocos引擎中文官网" target="_blank">Cocos引擎中文官网</a>&nbsp;&nbsp;
                <a href="http://www.wyzc.com/" title="我赢职场" target="_blank">我赢职场</a>&nbsp;&nbsp;
                <a href="http://www.thebigdata.cn/" title="大数据时代" target="_blank">大数据时代</a>&nbsp;&nbsp;
                <a href="http://www.qidic.com/" title="奇笛网" target="_blank">奇笛网</a>&nbsp;&nbsp;
                <a href="http://www.cngulu.com/" title="咕噜网" target="_blank">咕噜网</a>&nbsp;&nbsp;
                <a href="http://www.linuxdiyf.com/" title="红联linux" target="_blank">红联linux</a>&nbsp;&nbsp;
                <a href="http://win10.ithome.com/" title="Win10之家" target="_blank">Win10之家</a>&nbsp;&nbsp;
            <a href="http://www.tuicool.com/links">更多链接&gt;&gt;</a>&nbsp;&nbsp;
        </dd>
    </dl>
    <div class="clear"></div>
    </div>
</div>

<div style="display:none;">
   <script src="./Kafka Consumer接口 - fxjwind - 推酷_files/stat.php" language="JavaScript"></script><script src="./Kafka Consumer接口 - fxjwind - 推酷_files/core.php" charset="utf-8" type="text/javascript"></script><a href="http://www.cnzz.com/stat/website.php?web_id=5541078" target="_blank" title="站长统计"><img border="0" hspace="0" vspace="0" src="./Kafka Consumer接口 - fxjwind - 推酷_files/pic.gif"></a>
</div>




<div class="return" title="返回顶部" style="display: none; "></div></body></html>